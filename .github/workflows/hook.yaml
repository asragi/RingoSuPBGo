name: compile
on:
  repository_dispatch:
    types: [compile-pb]

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.1
        id: go
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2.1.0
        with:
          path: ~/gp/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          remote-keys: |
            ${{ runner.os }}-go-
  compile-pb:
    runs-on: ubuntu-20.04
    env:
      SERVICE_NAME: gateway
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: clone pb repo
        uses: actions/checkout@v2
        with:
          repository: asragi/RingoSu
          path: RingoSu
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: copy target service
        run: |
          echo '== ls aggregation-pb/${{ env.SERVICE_NAME }} =='
          ls aggregation-pb/${{ env.SERVICE_NAME }}
          if [ -d ${{ env.SERVICE_NAME }} ]; then
            rm -rf ${{ env.SERVICE_NAME }}
          fi
          cp -rf aggregation-pb/${{ env.SERVICE_NAME }} ${{ env.SERVICE_NAME }}
      - name: clean aggregation-pb
        run: |
          rm -rf aggregation-pb
      - name: ls test
        run: |
          echo '== ls =='
          ls
          echo '== ls service name =='
          ls ${{ env.SERVICE_NAME }}
      - name: apt-get to prepare for pb compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
      - name: initialize go
        run: go mod init github.com/asragi/RingoSuPBGo
      ## protocするための関連パッケージをゲット
      - name: get protoc
        run: |
          go get -v google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go get -v google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
          go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc
      ## ドキュメント生成用のディレクトリを生成
      - name: make directory docs
        run: mkdir -p docs
      - name: compile protocol-buffers
        run: |
          export PATH="$PATH:$(go env GOPATH)/bin"
          protoc \
            --doc_out=./docs --doc_opt=markdown,${{ env.SERVICE_NAME }}.md \
            --go_out=. --go_opt=paths=source_relative \
            --go-grpc_out=. --go-grpc_opt=paths=source_relative \
            ${{ env.SERVICE_NAME }}/proto/${{ env.SERVICE_NAME }}.proto
      - name: rm go mod & sum
        run: rm go.mod go.sum
      - name: create PR
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          commit-message: compile ${{ env.SERVICE_NAME }}
          branch: compile-pb
          branch-suffix: timestamp
          delete-branch: true
          title: 'compile:${{ env.PR_TITLE }}'